// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sorter.proto

package sorter

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Numbers struct {
	Numbers              []int64  `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Numbers) Reset()         { *m = Numbers{} }
func (m *Numbers) String() string { return proto.CompactTextString(m) }
func (*Numbers) ProtoMessage()    {}
func (*Numbers) Descriptor() ([]byte, []int) {
	return fileDescriptor_e901282bb6f3300c, []int{0}
}

func (m *Numbers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Numbers.Unmarshal(m, b)
}
func (m *Numbers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Numbers.Marshal(b, m, deterministic)
}
func (m *Numbers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Numbers.Merge(m, src)
}
func (m *Numbers) XXX_Size() int {
	return xxx_messageInfo_Numbers.Size(m)
}
func (m *Numbers) XXX_DiscardUnknown() {
	xxx_messageInfo_Numbers.DiscardUnknown(m)
}

var xxx_messageInfo_Numbers proto.InternalMessageInfo

func (m *Numbers) GetNumbers() []int64 {
	if m != nil {
		return m.Numbers
	}
	return nil
}

func init() {
	proto.RegisterType((*Numbers)(nil), "sorter.Numbers")
}

func init() { proto.RegisterFile("sorter.proto", fileDescriptor_e901282bb6f3300c) }

var fileDescriptor_e901282bb6f3300c = []byte{
	// 103 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xce, 0x2f, 0x2a,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x94, 0xb9, 0xd8,
	0xfd, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0x8a, 0x85, 0x24, 0xb8, 0xd8, 0xf3, 0x20, 0x4c, 0x09, 0x46,
	0x05, 0x66, 0x0d, 0xe6, 0x20, 0x18, 0xd7, 0xc8, 0x92, 0x8b, 0x2d, 0x18, 0xac, 0x5c, 0x48, 0x9f,
	0x8b, 0x33, 0xb0, 0x34, 0x33, 0x39, 0x1b, 0xc4, 0x15, 0xe2, 0xd7, 0x83, 0x1a, 0x09, 0x35, 0x41,
	0x0a, 0x5d, 0x40, 0x89, 0x21, 0x89, 0x0d, 0x6c, 0x9d, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6e,
	0x07, 0xb7, 0x8f, 0x7e, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SorterClient is the client API for Sorter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SorterClient interface {
	QuickSort(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Numbers, error)
}

type sorterClient struct {
	cc *grpc.ClientConn
}

func NewSorterClient(cc *grpc.ClientConn) SorterClient {
	return &sorterClient{cc}
}

func (c *sorterClient) QuickSort(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Numbers, error) {
	out := new(Numbers)
	err := c.cc.Invoke(ctx, "/sorter.Sorter/QuickSort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SorterServer is the server API for Sorter service.
type SorterServer interface {
	QuickSort(context.Context, *Numbers) (*Numbers, error)
}

// UnimplementedSorterServer can be embedded to have forward compatible implementations.
type UnimplementedSorterServer struct {
}

func (*UnimplementedSorterServer) QuickSort(ctx context.Context, req *Numbers) (*Numbers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuickSort not implemented")
}

func RegisterSorterServer(s *grpc.Server, srv SorterServer) {
	s.RegisterService(&_Sorter_serviceDesc, srv)
}

func _Sorter_QuickSort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Numbers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SorterServer).QuickSort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sorter.Sorter/QuickSort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SorterServer).QuickSort(ctx, req.(*Numbers))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sorter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sorter.Sorter",
	HandlerType: (*SorterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QuickSort",
			Handler:    _Sorter_QuickSort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sorter.proto",
}
